<?php

namespace ad\ExtraBundle\Entity\Repository;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;
use ad\ExtraBundle\Entity\Category;
use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends NestedTreeRepository
{
	public function findAllSubCat()
	{
		$em = $this->getEntityManager();
		
		$qb = $em->createQueryBuilder();
		$qb->addSelect('c');
		$qb->from('adExtraBundle:Category','c');
		$qb->where('c.parent is not null');
		
		return $response = $qb->getQuery()->getResult();
	}

	public function findCatBySlug($slug)
	{
		$em = $this->getEntityManager();
	
		$qb = $em->createQueryBuilder();
		$qb->addSelect('c');
		$qb->from('adExtraBundle:Category','c');
		$qb->where('c.slug = :slug');
		
		$qb->setParameter('slug', $slug);
	
		$response = $qb->getQuery()->getResult();
		
		return $response[0];
	}
	
	public function hasFile($id)
	{
		$em = $this->getEntityManager();
		
		$qb = $em->createQueryBuilder();
		$qb->addSelect('f');
		$qb->from('adExtraBundle:File','f');
		$qb->where('f.categoryId = :id');
		
		$qb->setParameter('id', $id);
		
		$response = $qb->getQuery()->getResult();
		
		return $response;
	}
	
}
